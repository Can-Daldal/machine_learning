# -*- coding: utf-8 -*-
"""Makina_Ögrenmesi2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VYICJg48XfmBoEWT0RLgpdE7ECiDYtuq
"""

!pip install pandas
!pip install scikit-learn

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report
import sklearn.datasets as ds
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv("iris_original.csv")
print(df)

df = pd.DataFrame(df)
print(df.head)

# Kaç tane eksik veri var?
df.isna().sum()

X = data.drop("species", axis=1)
y = data["species"]

df.hist(bins=50,figsize=(20,15))
plt.show()

## Korelasyon ısı haritası gösterimi
fig, ax = plt.subplots(figsize = (20, 12)) #plot boyutu
ax = sns.heatmap(df.corr(),cmap='RdBu_r',cbar=True,annot=True,linewidths=0.5,ax=ax)
plt.show()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Naive Bayes modelini oluştur
model = GaussianNB()

# Modeli eğit
model.fit(X_train, y_train)

# Test seti üzerinde tahmin yap
y_pred = model.predict(X_test)

# Model performansını değerlendir
accuracy = accuracy_score(y_test, y_pred)
print(f'Test seti doğruluğu: {accuracy:.2f}')

# Sınıflandırma raporu
print('Sınıflandırma Raporu:')
print(classification_report(y_test, y_pred))

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report
from sklearn import datasets

# Iris veri setini yükle
iris = datasets.load_iris()
X = iris.data
y = iris.target

# Veriyi eğitim ve test setlerine ayır
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Naive Bayes modelini oluştur
model = GaussianNB()

# Modeli eğit
model.fit(X_train, y_train)

# Kullanıcıdan giriş al
user_input = []
user_input.append(float(input("Çanak yaprağı uzunluğunu girin: ")))
user_input.append(float(input("Çanak yaprağı genişliğini girin: ")))
user_input.append(float(input("Taç yaprağı uzunluğunu girin: ")))
user_input.append(float(input("Taç yaprağı genişliğini girin: ")))

# Kullanıcının girdisi ile tahmin yap
predicted_class = model.predict([user_input])[0]

# Tahmin sonucunu ekrana yazdır
predicted_species = iris.target_names[predicted_class]
print(f"Tahmin edilen çiçek türü: {predicted_species}")